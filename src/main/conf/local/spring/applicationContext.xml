<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    
	<!-- 数据库配置 -->
	<bean id="configurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:dbconfig.properties</value>
				<value>classpath*:sso.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 数据源定义,使用c3p0 连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${basdb.jdbc.driver}" />
		<property name="jdbcUrl" value="${basdb.jdbc.url}" />
		<property name="user" value="${basdb.jdbc.username}" />
		<property name="password" value="${basdb.jdbc.password}" />
		<property name="initialPoolSize" value="${cpool.minPoolSize}" />
		<property name="minPoolSize" value="${cpool.minPoolSize}" />
		<property name="maxPoolSize" value="${cpool.maxPoolSize}" />
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" />
		<property name="maxIdleTime" value="${cpool.maxIdleTime}" />
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="save*" rollback-for="Throwable" />
			<tx:method name="insert*" rollback-for="Throwable" />
			<tx:method name="update*" rollback-for="Throwable" />
			<tx:method name="delete*" rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.billionsfinance.bas.service..*Service*.*(..))" />
	</aop:config>

	<!-- myBatis文件 -->
	<bean id="basSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描映射文件目录, 省掉Configuration.xml里的手工配置 <property name="configLocation" 
			value="classpath:spring/mybatis-config.xml" /> -->
		<property name="mapperLocations"
			value="classpath:com/billionsfinance/bas/dao/mapper/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.billionsfinance.bas.dao" />
		<property name="sqlSessionFactoryBeanName" value="basSqlSessionFactory" />
	</bean>

	<!-- 任务调度 -->
	<!--<import resource="classpath:spring/app-context-quartz.xml" /> -->
	
	<!-- spring-security验证 -->
<!-- 	<import resource="classpath:spring/app-context-security-cas.xml" /> -->
	<import resource="classpath:spring/app-context-security.xml" />
	<!-- serviceBean -->
	<import resource="classpath:spring/bas_service.xml" />

</beans>