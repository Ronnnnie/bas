<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- 放行的资源 -->
	<sec:http pattern="/css/**" security="none" />
	<sec:http pattern="/images/**" security="none" />
	<sec:http pattern="/js/**" security="none" />

	<!-- 权限控制 -->
	<sec:http auto-config="true" entry-point-ref="casProcessingFilterEntryPoint">

		<!-- 所有认证通过的用户都可以访问 -->
		<sec:intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<!-- <sec:intercept-url pattern="/index.jsp" access="ROLE_USER" /> -->

		<!-- 退出登录时返回的页面 -->
		<sec:logout invalidate-session="true"  logout-url="/logout"
			logout-success-url="${als.cas.url}/logout?service=${als.framework.app.url}" />

		<sec:custom-filter position="CAS_FILTER" ref="casProcessingFilter" />
	</sec:http>

	<!-- 认证管理器 -->
	<sec:authentication-manager alias="authenticationManager">
		 <sec:authentication-provider ref="casAuthenticationProvider" />
	</sec:authentication-manager>

	<bean id="casProcessingFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<bean id="casProcessingFilterEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${als.cas.url}/login" />
		<property name="serviceProperties" ref="casServiceProperties" />
	</bean>

	<bean id="casServiceProperties"
		class="org.springframework.security.cas.ServiceProperties">
		<property name="service"
			value="${als.framework.app.url}/j_spring_cas_security_check" />
		<property name="sendRenew" value="false" />
	</bean>
	
	

	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<!-- <property name="userDetailsService" ref="myUserDetailsService" /> -->
		<property name="authenticationUserDetailsService" ref="authenticationUserDetailsService" />
		<property name="serviceProperties" ref="casServiceProperties" />
		<property name="ticketValidator">
			<bean
				class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${als.cas.url}" />
			</bean>
		</property>
		<property name="key"
			value="an_id_for_this_auth_provider_only" />
	</bean>
	
	<bean id="authenticationUserDetailsService" class="com.billionsfinance.als.security.GrantedAuthorityFromAssertionAttributesUserDetailsServiceImpl">
	<constructor-arg>
	<array>
	<value>authorities</value>
	</array>
	</constructor-arg>
	<property name="sysCodeKey" value="SYSCODE"></property>
	<property name="sysCode" value="${als.framework.syscode}"></property>
	<property name="isSysUrl" value="false"></property>
	<property name="sysUrl" value="false"></property>
	<!--<property name="sysRes" ref="singlePointLogin"/>-->
	
	</bean>
	
	
	
	<bean id="myUserDetailsService" class="com.billionsfinance.bas.security.MyUserDetailsService" />
</beans>